name: CI Pipeline for Branches

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches-ignore:
      - "**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # teleport:
  #   runs-on: quay.io/gravitational/teleport:9
  #   steps:
  #     - name: Get certs from Teleport
  #       run: |
  #         echo "TODO... generate certs"

  build:
    runs-on: ubuntu-latest
    # needs: test
    # if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    env:
        # Due to 
        TOOLS_KUBECONFIG: '${{ github.workspace }}/.kube/tools-kubeconfig.yml'
        ARGOCD_SERVER: localhost:8080
        ARGOCD_OPTS: --grpc-web --insecure --plaintext

    steps:
      - uses: actions/checkout@v2
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
      #     aws-region: eu-west-2
      # - name: Login to Amazon ECR
      #   uses: aws-actions/amazon-ecr-login@v1

      # Set up the kubeconfig file in GHA secrets first
      - name: Set up kubernetes config file
        run: |
          mkdir -p '${{ github.workspace }}/.kube' \
            && echo '${{ secrets.TOOLS_KUBECONFIG_CONTENT_B64 }}' | base64 -d > $TOOLS_KUBECONFIG

      - name: Test kubernetes connection
        run: 'kubectl version --kubeconfig $TOOLS_KUBECONFIG'

      - name: Configure ArgoCD CLI
        uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.2.5
          command: version
          options: --client

      - name: Build, tag, and push image to Amazon ECR
        run: |
          echo ${GITHUB_REF_NAME}
          export BRANCH_TAG=$(echo "${GITHUB_REF_NAME}" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          
          docker build -t $ECR_REPOSITORY .
            
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG-${GITHUB_SHA::7}
            
          echo "docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG"
          echo "docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG-${GITHUB_SHA::7}"
        env:
          # ECR_REGISTRY: ${{ secrets.DOCKER_REPO_URL }}
          ECR_REGISTRY: test
          ECR_REPOSITORY: test

      - name: Set up kubernetes port-forwarding connection to tools cluster
        run: 'kubectl port-forward -n argocd svc/argocd-server 8080:80 --kubeconfig $TOOLS_KUBECONFIG &'

      - name: "Deploy to ArgoCD"
        # if: github.ref == 'refs/heads/main'
        run: |
          export BRANCH_TAG=$(echo "${GITHUB_REF_NAME}" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          if test -z "$BRANCH_TAG"; then export TAG=commit; else export TAG=$BRANCH_TAG;fi

          echo "TAG - ${TAG}"
          echo "COMMIT_TAG - ${GITHUB_SHA::7}"
          echo "IMAGE_TAG - $TAG-${GITHUB_SHA::7}"
          
          # TODO - use ArgoCD CLI
          echo "argocd something something"
          curl -v http://localhost:8080

      - name: Log into ArgoCD
        # if: github.ref == 'refs/heads/main'
        uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.2.5
          command: login
          options: ${{ env.ARGOCD_SERVER }}

      - name: List ArgoCD apps
        # if: github.ref == 'refs/heads/main'
        uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.2.5
          command: app
          options: ls
